<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="false">


    <bean id="redisConfigPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="3" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" >
            <list>
                <value>classpath:config/redis/redis.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8" />
    </bean>


	<!-- jedis 配置-->

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxActive}"/>
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>



	<bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg index="0" value="${redis.masterName}"/>
		<constructor-arg index="1">
			<set>
				<value>"${redis.sentinel.first}"</value>
				<value>"${redis.sentinel.second}"</value>
			</set>
		</constructor-arg>
		<constructor-arg index="2" ref="poolConfig"/>
		<constructor-arg index="3" value="${redis.timeout}"/>
		<constructor-arg index="4"  value="${redis.password}"/>
		<constructor-arg index="5" value="${redis.database}"/>
	</bean>

	<!-- redis服务器中心 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="poolConfig" />
		<property name="port" value="${redis.port}" />
		<property name="hostName" value="${redis.host}" />
		<property name="password" value="${redis.password}" />
		<property name="timeout" value="${redis.timeout}" />
	</bean>

	<!-- redis 模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer" >
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean >

</beans>